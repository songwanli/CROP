// Generated by CoffeeScript 1.10.0
var CommonPackage, FRAMEWORK_API, RES, _, encryptor, express, fs, i, j, key, paths, ref, router, serverKey;

_ = require('underscore');

fs = require('fs');

express = require('express');

encryptor = require('../encryptor');

paths = require('../common/paths');

RES = require('../common/response');

CommonPackage = require('../CommonPackage');

FRAMEWORK_API = 'ptframework.do';

serverKey = fs.readFileSync(paths.data('keystore', 'pastry.key')) + '';

if (serverKey.indexOf('BEGIN PRIVATE KEY') === -1) {
  key = '-----BEGIN PRIVATE KEY-----\n';
  for (i = j = 0, ref = parseInt(serverKey.length / 64); 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
    key += serverKey.slice(i * 64, (i + 1) * 64) + '\n';
  }
  key += '-----END PRIVATE KEY-----';
  serverKey = key;
}

router = express.Router();

router.route("/" + FRAMEWORK_API).post(function(req, res, next) {
  var business, crKey, encryptKey, pkg, sessionId, sidKey, sr, srKey;
  console.log('++++++++++++++++++++++++++++');
  console.log(req.url);
  console.log(req.query);
  console.log(req.headers);
  console.log(JSON.parse(req.body));
  console.log('++++++++++++++++++++++++++++');
  switch (req.query.act) {
    case 'handshake':
      sr = encryptor.getRandom();
      sessionId = req.session.id;
      res.setHeader('Service-Number', sr);
      res.setHeader('sessionState', 100);
      business = CommonPackage.getBusiness(req.body, {
        key: serverKey
      });
      business = JSON.parse(business);
      srKey = sr.substring(4, 12);
      crKey = business.cr.substring(4, 12);
      sidKey = sessionId.substring(sessionId.length - 9, sessionId.length - 1);
      req.session.encryptKey = encryptKey = srKey + crKey + sidKey;
      business = {
        ret: 'ok',
        UUIDKEY: 'abcdefghijk1234567890'
      };
      pkg = new CommonPackage(business, {
        key: encryptKey
      });
      res.end(JSON.stringify(pkg));
      break;
    case 'update':
      encryptKey = req.session.encryptKey;
      business = CommonPackage.getBusiness(req.body, {
        key: encryptKey
      });
      business = JSON.parse(business);
      console.log(business);
      res.setHeader('sessionState', 100);
      business = {
        result: 0
      };
      pkg = new CommonPackage(business, {
        key: encryptKey
      });
      res.end(JSON.stringify(pkg));
  }
});

module.exports = router;
